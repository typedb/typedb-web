/*!/*
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */

@use "@angular/material" as mat;
@use "colors";
@use "shapes";
@use "typography";

@include mat.elevation-classes();
@include mat.app-background();
$purple-palette: (
    50: colors.$secondary-purple,
    100: colors.$secondary-purple,
    200: colors.$secondary-purple,
    300: colors.$secondary-purple,
    400: colors.$secondary-purple,
    500: colors.$secondary-purple,
    600: colors.$secondary-purple,
    700: colors.$secondary-purple,
    800: colors.$secondary-purple,
    900: colors.$secondary-purple,
    A100: colors.$secondary-purple,
    A200: colors.$secondary-purple,
    A400: colors.$secondary-purple,
    A700: colors.$secondary-purple,
    contrast: (
        50: rgba(black, 0.87),
        100: rgba(black, 0.87),
        200: rgba(black, 0.87),
        300: rgba(black, 0.87),
        400: rgba(black, 0.87),
        500: white,
        600: white,
        700: white,
        800: white,
        900: white,
        A100: rgba(black, 0.87),
        A200: rgba(black, 0.87),
        A400: white,
        A700: white,
    )
);
$green-palette: (
    50: colors.$green,
    100: colors.$green,
    200: colors.$green,
    300: colors.$green,
    400: colors.$green,
    500: colors.$green,
    600: colors.$green,
    700: colors.$green,
    800: colors.$green,
    900: colors.$green,
    A100: colors.$green,
    A200: colors.$green,
    A400: colors.$green,
    A700: colors.$green,
    contrast: (
        50: rgba(black, 0.87),
        100: rgba(black, 0.87),
        200: rgba(black, 0.87),
        300: rgba(black, 0.87),
        400: rgba(black, 0.87),
        500: white,
        600: white,
        700: white,
        800: white,
        900: white,
        A100: rgba(black, 0.87),
        A200: rgba(black, 0.87),
        A400: white,
        A700: white,
    )
);
$red-palette: (
    50: colors.$red,
    100: colors.$red,
    200: colors.$red,
    300: colors.$red,
    400: colors.$red,
    500: colors.$red,
    600: colors.$red,
    700: colors.$red,
    800: colors.$red,
    900: colors.$red,
    contrast: (
        50: rgba(black, 0.87),
        100: rgba(black, 0.87),
        200: rgba(black, 0.87),
        300: rgba(black, 0.87),
        400: white,
        500: white,
        600: white,
        700: white,
        800: white,
        900: white,
    )
);
$typedb-primary: mat.m2-define-palette($green-palette, 700, 300, 900);
$typedb-accent: mat.m2-define-palette($purple-palette, 300, 100, 500);
$typedb-warn: mat.m2-define-palette($red-palette, 700);
$typedb-typography: mat.m2-define-typography-config(
    $font-family: typography.$font-family-default,
);
$typedb-theme: mat.m2-define-dark-theme((
    color: (
        primary: $typedb-primary,
        accent: $typedb-accent,
        warn: $typedb-warn,
    ),
    typography: $typedb-typography,
));
@include mat.all-component-themes($typedb-theme);
@include mat.all-component-densities(-1);

/* Material CSS overrides */
body {
    /* Button */
    @include mat.button-overrides((
        text-label-text-size: 14px,
        text-label-text-tracking: typography.$letter-spacing,
        text-label-text-weight: typography.$regular,
        text-label-text-color: colors.$grey,
        text-container-height: 32px,
        text-container-shape: 16px,
        text-disabled-label-text-color: rgba(255, 255, 255, 0.25),
        text-disabled-state-layer-color: transparent,

        filled-label-text-size: 14px,
        filled-label-text-tracking: typography.$letter-spacing,
        filled-label-text-weight: typography.$regular,
        filled-label-text-color: colors.$grey,
        filled-disabled-container-color: rgba(255, 255, 255, 0.12),
        filled-disabled-label-text-color: rgba(255, 255, 255, 0.25),
        filled-disabled-state-layer-color: transparent,
        filled-container-height: 40px,
        filled-container-shape: 20px,
        filled-state-layer-color: #fff,
        filled-ripple-color: rgba(255, 255, 255, 0.1),
        filled-hover-state-layer-opacity: 0.08,
        filled-focus-state-layer-opacity: 0.24,
        filled-pressed-state-layer-opacity: 0.24,

        outlined-label-text-size: 14px,
        outlined-label-text-tracking: #{typography.$letter-spacing},
        outlined-label-text-weight: #{typography.$regular},
        outlined-disabled-outline-color: #{rgba(255, 255, 255, 0.12)},
        outlined-disabled-label-text-color: rgba(255, 255, 255, 0.25),
        outlined-disabled-state-layer-color: transparent,
        outlined-label-text-color: #{colors.$grey},
        outlined-outline-color: #{colors.$light-purple},
        outlined-container-shape: 16px,
    ));

    .mdc-button[disabled] {
        pointer-events: all;
    }

    .mat-mdc-unelevated-button {
        border: 1px solid colors.$light-purple;
    }

    .mat-mdc-unelevated-button:not(:disabled) {
        @include colors.light-source-gradient(rgba(colors.$light-purple, 0.9), colors.$purple, 80px, 16px);
    }

    /* Button toggle */
    @include mat.button-toggle-overrides((
        height: 30px,
        label-text-size: 14px,
        divider-color: colors.$light-purple,
        background-color: colors.$deep-purple,
        selected-state-background-color: colors.$secondary-purple,
        selected-state-text-color: colors.$green,
        disabled-selected-state-text-color: rgba(colors.$grey, 0.63),
        disabled-state-background-color: colors.$secondary-dark-grey,
        disabled-selected-state-background-color: colors.$secondary-deep-grey,
        shape: shapes.$border-radius-small,
    ));

    .mat-button-toggle:hover button:not([disabled]) {
        color: colors.$green;
    }

    .mat-button-toggle-disabled .mat-button-toggle-button {
        cursor: not-allowed;
    }

    .mat-button-toggle-appearance-standard.mat-button-toggle-disabled.mat-button-toggle-checked button:disabled {
        color: var(--mat-standard-button-toggle-disabled-selected-state-text-color);
        background-color: var(--mat-standard-button-toggle-disabled-selected-state-background-color);
    }

    /* Checkbox */
    .mdc-checkbox__background {
        border-radius: 3px;
    }

    mat-checkbox.mat-mdc-checkbox .mdc-checkbox {
        @include mat.checkbox-overrides((
            selected-checkmark-color: colors.$purple,
        ));
    }

    /* Chips */
    .mat-mdc-chip.mat-mdc-standard-chip {
        --mdc-chip-elevated-container-color: #{colors.$secondary-purple};
        --mdc-chip-label-text-size: 14px;
        --mdc-chip-label-text-tracking: var(--body-letter-spacing);
        --mdc-chip-container-height: 40px;
        --mdc-chip-focus-state-layer-opacity: 1;
        @include shapes.standard-border;
        transition: 100ms border-color ease;

        &:hover, &.cdk-focused {
            border-color: colors.$secondary-grey;
        }

        &.mat-mdc-chip-selected.mat-primary {
            --mdc-chip-label-text-color: #{colors.$purple};
            border-color: #{colors.$green};
            --mdc-chip-with-icon-selected-icon-color: #{colors.$purple};
        }
    }

    .mat-mdc-chip-focus-overlay {
        opacity: 0 !important; /* overrides Angular Material styles */
        backdrop-filter: blur(10px);
    }

    .mdc-evolution-chip-set .mdc-evolution-chip-set__chips {
        margin: 0;
        gap: 12px;
    }

    .mdc-evolution-chip-set .mdc-evolution-chip {
        margin: 0;
    }

    .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic  {
        .mdc-evolution-chip__graphic {
            padding-left: 8px;
            padding-right: 8px;
        }
        .mdc-evolution-chip__action--primary {
            padding-right: 16px;
        }
    }

    /* Dialog */
    @include mat.dialog-overrides((
        container-color: colors.$deep-purple,
        subhead-color: colors.$white,
        supporting-text-color: colors.$white,
        supporting-text-size: 14px,
        supporting-text-tracking: var(--body-letter-spacing),
        supporting-text-weight: typography.$regular,
    ));

    .mdc-dialog {
        .mdc-dialog__surface {
            padding: 24px;
            border-radius: shapes.$border-radius;
        }

        .mdc-dialog__title {
            padding: 0 0 24px;
            display: flex;
            justify-content: space-between;
            align-items: center;

            &::before {
                display: none;
            }
        }

        .mdc-dialog__content {
            padding: 0;
        }

        @include mat.button-toggle-overrides((
            divider-color: colors.$secondary-mid-deep-grey,
            background-color: colors.$secondary-purple,
            selected-state-background-color: colors.$secondary-mid-deep-grey,
            selected-state-text-color: colors.$green,
        ));

        @include mat.form-field-overrides((
            outlined-outline-color: colors.$secondary-mid-deep-grey,
            outlined-hover-outline-color: colors.$secondary-light-grey,
            outlined-focus-outline-color: colors.$secondary-light-grey,
        ));
    }

    .mat-mdc-dialog-container .mdc-dialog__surface {
        border: shapes.$border;
        box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.3), 0px 24px 38px 3px rgba(0, 0, 0, 0.21), 0px 9px 46px 8px rgba(0, 0, 0, 0.18);
    }

    .cdk-overlay-dark-backdrop {
        background: rgba(0, 0, 0, 0.5);
    }

    /* Divider */
    @include mat.divider-overrides((
        color: colors.$light-purple,
    ));

    /* Expansion */
    mat-expansion-panel {
        --mat-expansion-header-text-size: 16px;
        --mat-expansion-header-expanded-state-height: 44px;
        --mat-expansion-container-text-size: 14px;
    }

    .mat-expansion-panel-body {
        padding: 0 28px 28px;
    }

    /* Form field */
    @include mat.form-field-overrides((
        container-text-size: 14px,
        container-text-line-height: 1.5,
        container-text-tracking: var(--body-letter-spacing),
        subscript-text-tracking: var(--body-letter-spacing),

        outlined-container-shape: shapes.$border-radius-small,
        outlined-label-text-size: 14px,
        outlined-label-text-tracking: var(--body-letter-spacing),
        outlined-label-text-weight: typography.$regular,
        outlined-label-text-color: rgba(colors.$secondary-light-grey, 0.8),
        outlined-outline-color: colors.$light-purple,
        outlined-hover-outline-color: colors.$secondary-grey,
        outlined-focus-outline-color: colors.$secondary-grey,
        outlined-input-text-color: colors.$white,
        outlined-input-text-placeholder-color: colors.$secondary-grey,
    ));

    .code-text-field .mdc-text-field {
        --mat-form-field-container-text-font: #{typography.$font-family-code !important};
        --mat-form-field-container-text-line-height: 22px !important;
        --mat-form-field-container-text-size: 14px !important;
        --mat-form-field-container-text-tracking: #{typography.$letter-spacing !important};
        --mat-form-field-container-text-weight: #{typography.$regular !important};
    }

    .mat-mdc-form-field-input-control {
        -webkit-font-smoothing: auto !important; // overrides hacky Angular Material style
    }

    .mat-mdc-form-field {
        --mat-select-trigger-text-size: 14px;

        &:not(.form-field-dense) {
            @include mat.form-field-density(-3);

            &.mat-mdc-form-field-type-mat-select .mat-mdc-text-field-wrapper {
                height: 44px;
            }
        }

        &.form-field-dense {
            @include mat.form-field-density(-5);
        }

        .mat-mdc-form-field-text-prefix {
            opacity: 50%;
        }
    }

    .mat-mdc-form-field .mat-mdc-floating-label.mdc-floating-label {
        -webkit-font-smoothing: auto;
    }

    .mat-mdc-form-field-bottom-align::before {
        content: unset;
    }

    .mat-mdc-form-field-hint-wrapper, .mat-mdc-form-field-error-wrapper {
        position: static;
    }

    .mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label {
        top: 22px;
    }

    .mat-mdc-form-field.form-field-dense .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above {
        --mat-mdc-form-field-label-transform: translateY(-27px) scale(.75);
    }

    .mat-mdc-form-field-error {
        font-size: 14px;
        letter-spacing: normal;
        margin-top: 2px;
    }

    .mat-mdc-text-field-wrapper {
        height: 100%;
    }

    mat-error p + p {
        margin-top: 8px;
    }

    textarea::placeholder {
        font-style: italic;
    }

    /* Icon */
    .mat-icon {
        svg {
            display: block;
        }
    }

    /* Icon button */
    .mat-mdc-icon-button.mat-mdc-button-base {
        --mat-icon-button-container-shape: #{shapes.$border-radius-small};
        --mat-icon-button-state-layer-size: 32px;
        min-width: 0;
        padding: 0;
        line-height: 1;
        display: flex;
        align-items: center;
        justify-content: center;

        i {
            margin: 0;
        }
    }

    .mdc-text-field .mat-mdc-icon-button.mat-mdc-button-base {
        --mat-icon-button-container-shape: 0;
        --mat-icon-button-state-layer-size: 44px;
    }

    .mdc-fab.mat-accent {
        --mdc-fab-container-color: transparent;
        --mat-fab-foreground-color: #{colors.$grey};
        --mat-fab-disabled-state-container-color: transparent;
        --mat-fab-disabled-state-foreground-color: #{colors.$secondary-mid-deep-grey};
        --mdc-fab-container-shape: #{shapes.$border-radius-small};
        --mdc-fab-small-icon-size: 16px;
        border-radius: shapes.$border-radius-small;

        .mat-icon {
            font-size: unset;
        }

        &.disabled {
            cursor: not-allowed;
            background-color: var(--mat-fab-disabled-state-container-color);
            color: var(--mat-fab-disabled-state-foreground-color);

            .mat-mdc-button-persistent-ripple {
                display: none;
            }
        }

        .mdc-button__label {
            display: flex;
        }
    }

    .mat-mdc-fab {
        width: 40px;
        height: 40px;

        .mat-mdc-button-touch-target {
            width: 40px;
            height: 40px;
        }
    }

    .mat-mdc-mini-fab {
        width: 32px;
        height: 32px;

        .mat-mdc-button-touch-target {
            width: 32px;
            height: 32px;
        }
    }

    /* Menu */
    @include mat.menu-overrides((
        container-color: colors.$secondary-purple,
        item-label-text-font: typography.$font-family-default,
        item-label-text-size: 14px,
        item-label-text-tracking: var(--body-letter-spacing),
    ));

    .mat-mdc-menu-panel {
        border-radius: shapes.$border-radius-small;
        border: 1px solid colors.$secondary-deep-grey;
        --mat-divider-color: colors.$secondary-deep-grey;

        aside {
            color: colors.$secondary-light-grey;
        }
    }

    .mat-mdc-menu-item {
        min-height: 32px;

        .mat-mdc-menu-item-text {
            display: flex;
            align-items: center;
        }

        mat-checkbox {
            margin-left: -8px;
        }
    }

    button.mat-mdc-menu-item:disabled {
        color: var(--mat-menu-item-label-text-color); /* overrides button:disabled color */
    }

    /* Paginator */
    @include mat.paginator-overrides((
        container-background-color: transparent,
        container-text-color: rgba(colors.$white, 0.7),
        container-text-font: typography.$font-family-default,
        container-text-size: 14px,
        container-text-tracking: var(--body-letter-spacing),
    ));

    /* Progress spinner */
    @include mat.progress-spinner-overrides((
        active-indicator-color: colors.$grey,
    ));

    /* Select */
    @include mat.select-overrides((
        trigger-text-tracking: var(--body-letter-spacing),
        panel-background-color: colors.$purple,
    ));

    @include mat.option-overrides((
        label-text-size: 14px,
        label-text-weight: typography.$regular,
        label-text-tracking: var(--body-letter-spacing),
    ));

    @include mat.optgroup-overrides((
        label-text-tracking: var(--body-letter-spacing),
    ));

    .mat-mdc-select {
        -webkit-font-smoothing: auto;
    }

    .form-field-dense {
        --mat-select-trigger-text-size: 14px;
    }

    div.mat-mdc-select-panel {
        border: 1px solid colors.$secondary-deep-grey;
        border-radius: shapes.$border-radius-small;

        mat-pseudo-checkbox.mat-pseudo-checkbox-checked::after {
            width: 12px;
            height: 5px;
        }

        .mat-mdc-option {
            min-height: 44px;
        }

        &.select-panel-dense {
            --mat-option-label-text-size: 14px;

            .mat-mdc-option {
                min-height: 32px;
            }
        }
    }

    mat-select-trigger > span {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        min-width: 0; // without this, the text in a flex container won't shrink
    }

    .mat-mdc-option {
        //padding-left: 32px; // makes padding consistent whether or not the option is part of an optgroup

        .mdc-list-item__primary-text {
            width: 100%;
            display: inline-flex;

            > span {
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
            }
        }
    }

    /* Sidenav */
    @include mat.sidenav-overrides((
        container-background-color: transparent,
        container-divider-color: transparent,
        content-background-color: #{colors.$black},
        scrim-color: rgba(#000, 0.4),
    ));

    .mat-sidenav-container {
        height: 100%;
    }

    .mat-sidenav-content {
        padding-right: 16px;
        display: flex;
        flex-direction: column;
    }

    /* Slider */
    @include mat.slider-overrides((
        handle-width: 8px,
        handle-shape: 2px,
    ));

    /* Slide toggle */
    .mat-mdc-slide-toggle {
        .mdc-switch:enabled, .mdc-switch:enabled:focus, .mdc-switch:enabled:hover:not(:focus) {
            .mdc-switch__track::after {
                background: colors.$light-purple;
            }
        }
    }

    /* Snack bar */
    @include mat.snack-bar-overrides((
        supporting-text-size: 14px,
        supporting-text-line-height: 20px,
    ));

    .mat-mdc-snack-bar-container {
        .mdc-snackbar__surface {
            padding: 0;
            background: transparent;
            box-shadow: none;

            &::before {
                display: none;
            }
        }
        .mdc-snackbar__label {
            padding: 0;
        }
    }

    /* Stepper */
    @include mat.stepper-overrides((
        container-color: transparent,
        header-selected-state-label-text-color: #{colors.$secondary-light-grey},
        header-label-text-size: 14px,
        header-selected-state-label-text-size: 14px,
        header-focus-state-layer-color: transparent,
        header-hover-state-layer-color: transparent,
    ));

    .mat-horizontal-stepper-header {
        border-radius: shapes.$border-radius-small;
        --mat-icon-color: #{colors.$purple};
        --mat-stepper-header-icon-foreground-color: #{colors.$purple};
        --mat-stepper-header-selected-state-icon-foreground-color: #{colors.$purple};
    }

    .mat-horizontal-content-container {
        flex: 1;
        overflow: visible;
    }

    .mat-step-label.mat-step-label-selected {
        color: #{colors.$white};
    }

    :has(> .mat-mdc-table) {
        display: block;
        overflow-x: auto;
    }

    /* Table */
    @include mat.table-overrides((
        background-color: transparent,
        header-container-height: 40px,
        header-headline-color: colors.$white,
        header-headline-size: 14px,
        header-headline-weight: typography.$semi-bold,
        row-item-container-height: 40px,
        row-item-outline-color: rgba(colors.$light-purple, 0.6),
    ));

    .mat-mdc-table {
        tr.table-row-clickable {
            cursor: pointer;

            &:hover {
                th, td {
                    background-color: rgba(colors.$light-purple, 0.6);

                    &:first-child {
                        border-radius: 4px 0 0 4px;
                    }

                    &:last-child {
                        border-radius: 0 4px 4px 0;
                    }
                }
            }
        }
    }

    .mdc-data-table__table {
        white-space: nowrap;
    }

    .mdc-data-table__cell, .mdc-data-table__header-cell {
        padding: 0 14px 0 14px;
    }

    .mat-mdc-cell {
        --mat-table-row-item-label-text-tracking: var(--body-letter-spacing);
    }

    .mat-column-select {
        width: 48px;
    }

    .mat-column-actions {
        min-width: 44px;
        width: 44px;
        max-width: 44px;
        padding: 0;
        overflow: visible;
        position: relative;

        .mat-mdc-fab {
            position: absolute;
            top: 0;
            bottom: 0;
            left: 0;
            right: 0;
            width: auto;
            height: auto;
            border-width: 0;
            box-shadow: none;
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
            font-size: 24px;
            background-color: transparent;

            .mdc-fab__ripple {
                border-top-left-radius: 0;
                border-bottom-left-radius: 0;
            }
        }
    }

    .mat-column-status {
        width: 48px;
        padding: 0 12px;
    }

    .mat-column-avatar {
        width: 34px;
    }

    /* Toolbar */
    @include mat.toolbar-overrides((
        container-background-color: colors.$deep-purple,
    ));

    .mat-toolbar {
        flex-shrink: 0;
        border-bottom: shapes.$border;
    }

    /* Tooltip */
    @include mat.tooltip-overrides((
        supporting-text-size: 14px,
        supporting-text-line-height: 18px,
        supporting-text-tracking: var(--body-letter-spacing),
        container-color: colors.$secondary-mid-deep-grey,
        container-shape: shapes.$border-radius-small,
    ));

    .mdc-tooltip__surface {
        padding: 6px 10px;
    }

    /* Tree */
    @include mat.tree-overrides((
        container-background-color: transparent,
        node-min-height: 30px,
        node-text-size: 14px,
        node-text-weight: typography.$regular,
    ));

    mat-tree-node[aria-level="2"] {
        padding-left: 16px !important; /* overrides inline style from Angular Material */
    }

    mat-tree-node[mattreenodetoggle] {
        cursor: pointer;
    }


    /* Autocomplete */
    @include mat.autocomplete-overrides((
        background-color: colors.$purple,
    ));
}
