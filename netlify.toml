[build]
base = "."
ignore = "/bin/false"

[build.processing.html]
pretty_urls = true

environment = { NODE_OPTIONS = "--max-old-space-size=4096" }

[context.production]
command = "ENV=production pnpm --filter typedb-web-main build && pnpm --filter typedb-web-main build-sitemap"
publish = "main/dist/main/browser"

[context.master]
command = "ENV=staging pnpm --filter typedb-web-main build"
publish = "main/dist/main/browser"

[context.development]
command = "ENV=development pnpm --filter typedb-web-main build"
publish = "main/dist/main/browser"

[context.ssr]
command = "ENV=ssr pnpm --filter typedb-web-main build && pnpm --filter typedb-web-main build-sitemap"
publish = "main/dist/main/browser"

[context.deploy-preview]
command = "ENV=development pnpm --filter typedb-web-main build"
publish = "main/dist/main/browser"


# EDGE FUNCTIONS

[[edge_functions]]
function = "ua-blocker"
path = "/*"

[[edge_functions]]
function = "echo"
path = "/api/echo"

[[edge_functions]]
function = "get-calendar-link"
path = "/api/calendar-link"

[[edge_functions]]
function = "send-deploy-notification-discord"
path = "/api/send-deploy-notification-discord"


# REDIRECTS AND REWRITES

# ALIASES
# Keep indefinitely
# N.B. the semantically correct status code is 303, but this code is not supported by Netlify

[[redirects]]
from = "/discord"
to = "https://discord.com/invite/typedb"
status = 301

[[redirects]]
from = "/github"
to = "https://github.com/typedb"
status = 301

[[redirects]]
from = "/academy"
to = "/docs/academy/"
status = 302

[[redirects]]
from = "/docs"
to = "/docs/home/"
status = 301
force = true

[[redirects]]
from = "/docs/2.x/*"
to = "/docs/:splat"
status = 302

# PERMANENT RENAMES
# Keep indefinitely as they will be used by old blog posts and other articles on the Web

[[redirects]]
from = "/introduction"
to = "/philosophy"
status = 301

[[redirects]]
from = "/deploy"
to = "/pricing"
status = 301

[[redirects]]
from = "/webinars/*"
to = "/lectures"
status = 301

[[redirects]]
from = "/white-papers/*"
to = "/papers"
status = 301

[[redirects]]
from = "/docs/reference/typeql/*"
to = "/docs/typeql-reference/:splat"
status = 301

# DOCS SUBDOMAIN POSING AS A SUBDIRECTORY
# Keep indefinitely. These rewrites power the typedb.com/docs subdirectory

[[redirects]]
from = "https://typedb.com/docs/*"
to = "https://typedb-docs.netlify.app/:splat"
status = 200

[[redirects]]
from = "https://master.typedb.com/docs/*"
to = "https://typedb-docs.netlify.app/:splat"
status = 200

[[redirects]]
from = "https://ssr.typedb.com/docs/*"
to = "https://typedb-docs.netlify.app/:splat"
status = 200

[[redirects]]
from = "https://development.typedb.com/docs/*"
to = "https://development--typedb-docs.netlify.app/:splat"
status = 200

# POSTHOG REVERSE PROXY
# Keep indefinitely. These reverse proxy configurations enable us to route data to PostHog through Netlify.
[[redirects]]
from = "/ph/static/*"
to = "https://us-assets.i.posthog.com/static/:splat"
host = "us-assets.i.posthog.com"
status = 200
force = true

[[redirects]]
from = "/ph/*"
to = "https://us.i.posthog.com/:splat"
host = "us.i.posthog.com"
status = 200
force = true

# These redirects were used in legacy applications and can be deleted in 2026
[[redirects]]
from = "/ingest/static/*"
to = "https://us-assets.i.posthog.com/static/:splat"
host = "us-assets.i.posthog.com"
status = 200
force = true

[[redirects]]
from = "/ingest/*"
to = "https://us.i.posthog.com/:splat"
host = "us.i.posthog.com"
status = 200
force = true

# CUSTOMER.IO REVERSE PROXY
# Keep indefinitely. These reverse proxy configurations enable us to route data to Customer.io through Netlify.
[[redirects]]
from = "/platform/*"
to = "https://cdp.customer.io/:splat"
host = "cdp.customer.io"
status = 200
force = true

[[redirects]]
from = "/forms/*"
to = "https://track.customer.io/api/v1/forms/:splat"
host = "track.customer.io"
status = 200
force = true

# MAIN SITE - 404 HANDLING FOR PRERENDERED SPA
# Keep indefinitely. This instructs any resource not found to serve index.html, allowing Angular router to serve a nice 404 page.
# IMPORTANT: This rule must come last in the redirects list in production, otherwise it will override all other rules.
# If we ever introduce non-prerendered pages on the main site, we will need to revisit this.

[[redirects]]
from = "https://typedb.com/*"
to = "https://typedb.com/404/index.html"
status = 404

[[redirects]]
from = "https://ssr.typedb.com/*"
to = "https://ssr.typedb.com/404/index.html"
status = 404

# MAIN SITE - CLIENT-RENDERED SPA HANDLING
# Keep indefinitely. This instructs any resource not found to serve the index page of the client-side SPA.

[[redirects]]
from = "https://development.typedb.com/*"
to = "https://development.typedb.com/index.html"
status = 200

[[redirects]]
from = "https://master.typedb.com/*"
to = "https://master.typedb.com/index.html"
status = 200


[[context.production.plugins]]
  package = "@netlify/plugin-lighthouse"

  [context.production.plugins.inputs]
    # This option runs the plugin on a locally served version instead of a deploy permalink,
    # fixing an issue where a Netlify header would impact SEO score (https://github.com/netlify/netlify-plugin-lighthouse/issues/593).
    # Despite the name, it doesn't actually fail deploys, unless the 'threshold' option is also set.
    fail_deploy_on_score_thresholds = "true"
